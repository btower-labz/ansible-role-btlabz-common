---
sudo: required

dist: trusty

env:
#  - distribution: centos
#    version: 7
#    ansible_version: latest
#  - distribution: fedora
#    version: 26
#    ansible_version: latest
#  - distribution: fedora
#    version: 25
#    ansible_version: latest
#  - distribution: fedora
#    version: 24
#    ansible_version: latest
#  - distribution: ubuntu
#    version: xenial
#    ansible_version: latest
#  - distribution: ubuntu
#    version: trusty
#    ansible_version: latest
  - distribution: debian
    version: stretch
    ansible_version: latest
  - distribution: debian
    version: stretch
    ansible_version: 2.4.3.0
  - distribution: debian
    version: stretch
    ansible_version: 2.4.2.0
  - distribution: debian
    version: stretch
    ansible_version: 2.4.1.0
  - distribution: debian
    version: stretch
    ansible_version: 2.4.0.0
#  - distribution: debian
#    version: jessie
#    ansible_version: latest

services:
  - docker

before_install:
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --build-arg ANSIBLE_VERSION=${ansible_version} --no-cache --rm --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

script:
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/btlabz-common-role:ro ${distribution}-${version}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible --version'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/btlabz-common-role/tests/test.yml --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -vvvv /etc/ansible/roles/btlabz-common-role/tests/test.yml'
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/btlabz-common-role/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'

notifications:
    webhooks: https://galaxy.ansible.com/api/v1/notifications/
